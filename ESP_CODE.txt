#include <WiFi.h>
#include <WiFiUdp.h>
#include <Wire.h>
#include <MPU6050_tockn.h>

const char *networkName = "DYPIEMR";
const char *networkPswd = "dypiemr1";
const char *udpAddress = "172.25.7.147";
const int udpPort = 6000;

boolean connected = false;
WiFiUDP udp;
MPU6050 mpu6050(Wire);

void setup() {
  Wire.begin(21, 22);
  Serial.begin(115200);
  WiFi.softAP("ESP32", "12345678");
  connectToWiFi(networkName, networkPswd);
  delay(1000);

  mpu6050.begin();
  mpu6050.calcGyroOffsets(true);
}

void connectToWiFi(const char *ssid, const char *pwd) {
  Serial.println("Connecting to WiFi network: " + String(ssid));
  WiFi.disconnect(true);
  WiFi.onEvent(WiFiEvent);
  WiFi.begin(ssid, pwd);
  Serial.println("Waiting for WIFI connection...");
}

void WiFiEvent(WiFiEvent_t event) {
  switch (event) {
    case SYSTEM_EVENT_STA_GOT_IP:
      Serial.print("WiFi connected! IP address: ");
      Serial.println(WiFi.localIP());
      connected = true;
      break;

    case SYSTEM_EVENT_STA_DISCONNECTED:
      Serial.println("WiFi lost connection");
      connected = false;
      break;    
  }}

void loop() {
  mpu6050.update();

  float yaw = mpu6050.getAngleY();
  float roll = mpu6050.getAngleZ();
  float pitch = mpu6050.getAngleX();
  float temperature = mpu6050.getTemp();
  float AccX = mpu6050.getAccX();
  float AccY = mpu6050.getAccY();
  float AccZ = mpu6050.getAccZ();

  udp.beginPacket(udpAddress, udpPort);
  udp.printf("%f,%f,%f,%f,%f,%f,%f", AccX, AccY, AccZ, temperature, yaw, roll, pitch);
  udp.endPacket();

  delay(1); // Delay for 5 seconds
            }
